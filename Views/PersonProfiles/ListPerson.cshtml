@model IEnumerable<PhotogeraphyGrant.ViewModels.Refereevm>
@{
    ViewBag.Title = "..: :..";
    var referee =(IEnumerable<PhotogeraphyGrant.Models.RefereePoint>)ViewBag.Referee;
}
<br />
<br />
<br />
<br />
<link href="~/Content/buttons.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/buttons.html5.js"></script>
<div class="panel panel-primary">
    <div class="panel-heading">
    </div>
    <div class="panel-body">
        <div class="table-responsive">
            <table id="ExamTable" class="table table-bordered table-striped   table-responsive">
                <thead>
                    @*<tr id="filters">
                        <th></th>
                        <th></th>
                        <th></th>
                        <th> </th>
                        <th> </th>
                        <th>   </th>
                        <th>    </th>
                        <th>    </th>
                        <th>   </th>
                    </tr>*@
                    <tr>
                        <th>#</th>
                        <th>تصویر</th>
                        <th style="width:15px"> استعداد جوان </th>
                        <th> نام و نام خانوادگی</th>

                        <th>رزومه  </th>
                        <th> ثبت نظر </th>
                        <th> امتیاز </th>
                       @if (User.IsInRole("Admin"))
                       {
                        <th> مجموع امتیازات </th>
                        <th>     امتیازات داوران </th>
                       
                       }
                     

                       @if (User.IsInRole("Referee"))
                       {
                        <th> ملاحضات </th>
                        <th>  کد ملی</th>
                            <th> مدرک </th>
                            <th>   رشته  </th>
                            <th>   کشور </th>
                            <th>   استان </th>
                            <th>  شهر </th>

                            <th>توضیحات  </th>
                       }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderByDescending(s => s.Point))
                    {

                        var Ref = referee.Where(r => r.PersonProfileid == item.PersonProfileid).FirstOrDefault();
                            var Sum = PhotogeraphyGrant.Utility.Math.GetPoint(item.PersonProfileid);
                            var Names = PhotogeraphyGrant.Utility.Math.Getreferee(item.PersonProfileid);
                        <tr>
                            <td></td>
                            <td>
                                @if (item.ImageUrl != null)
                                {
                                    <img class="img-rounded img-responsive" style="height:50px;width:50px;" src="@Url.Content(item.ImageUrl)" />
                                }
                                else
                                {
                                    <img class="img-thumbnail img-responsive" id="image_preview" style="height:50px;width:50px;" alt="" src="" />
                                }
                            </td>
                            <td style="width:15px">
                                @if (item.IsYoung)
                                {
                                    <a href="/PersonProfiles/IsReady/@item.PersonProfileid" class="isready glyphicon glyphicon-ok icon-2x" style="color:#ff6a00;"> </a>

                                }
                                else if (!item.IsYoung)
                                {
                                    <a href="/PersonProfiles/IsReady/@item.PersonProfileid" class="isready glyphicon glyphicon-ok-circle icon-2x" style="color:#ff6a00;"> </a>

                                    @*<a href="/PersonProfiles/IsReady/@item.PersonProfileid" class="isready glyphicon glyphicon-ok-circle icon-2x" style="color:#ff6a00"> </a>*@
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Fname) &nbsp;&nbsp;&nbsp;@Html.DisplayFor(modelItem => item.Lname)
                            </td>
                            <td>
                                @if (item.ResomehUrl != null)
                                {
                                    <a href="/PersonProfiles/downloadR/@item.PersonProfileid" target="_blank">دریافت رزومه</a>
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("Create", "RefereePoints", new { id=item.PersonProfileid})" class=" data-modal Mystyle2" role="button"><i class="glyphicon glyphicon-hand-up icon-2x" style="color:#b7095a"></i></a>

                            </td>
                            <td>
                               @if (Ref!=null)
                               {
                                   @Ref.Point
                               }
                            </td>
@if (User.IsInRole("Admin"))
{
                            <td>
                                   @Convert.ToInt32(@Sum)
                            </td>
                            <td>

                                @Names

                            </td>
}
                           
                          @if (User.IsInRole("Referee"))
                          {
                            <td>
                                @if (Ref != null)
                                {
                                    @Ref.RefereeNote
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NationalCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Degree.DegreeTitle)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Reshteh)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Country)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.City.Ostan.OstanName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.City.CityName)
                            </td>


                            <td>
                                @Html.DisplayFor(modelItem => item.Note)
                            </td>
                          }
                         
                        </tr>
                    }
                </tbody>
                @*<tfoot>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th> </th>
                        <th></th>
                        <th></th>
                        <th></th>

                    </tr>
                </tfoot>*@
            </table>

        </div>
    </div>
</div>


<script>
    $(document).delegate('.isready', 'click', function (e) {
        e.preventDefault();
        var link = $(this);
        $.ajax({
            type: 'Post',
            url: $(this).attr('href'),
            data: null,
            success: function (data) {
                if (data == 'True') {
                    link.removeClass('glyphicon-ok-circle');
                    link.addClass('glyphicon-ok');
                    link.closest('tr').css('color', 'green');
                }
                else {
                    link.removeClass('glyphicon-ok');
                    link.addClass('glyphicon-ok-circle');
                    link.closest('tr').css('color', 'b');
                }
            },
            error: function () {
                alert('error');
            }
        });
    });
</script>

<script>
        //plugin bootstrap minus and plus
        //http://jsfiddle.net/laelitenetwork/puJ6G/
        $('.btn-number').click(function (e) {
            e.preventDefault();

            fieldName = $(this).attr('data-field');
            type = $(this).attr('data-type');
            var input = $("input[name='" + fieldName + "']");
            var currentVal = parseInt(input.val());
            if (!isNaN(currentVal)) {
                if (type == 'minus') {

                    if (currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('min')) {
                        $(this).attr('disabled', true);
                    }

                } else if (type == 'plus') {

                    if (currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if (parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }
        });
        $('.input-number').focusin(function () {
            $(this).data('oldValue', $(this).val());
        });
        $('.input-number').change(function () {

            minValue = parseInt($(this).attr('min'));
            maxValue = parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());

            name = $(this).attr('name');
            if (valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if (valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }


        });
        $(".input-number").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
       
</script>